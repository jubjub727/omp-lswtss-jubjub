0x0       asIScriptEngine *GetEngine()
0x8       int AddRef()
0x10      int Release()
0x18      int GetId()
0x20      asEFuncType GetFuncType()
0x28      const char *GetModuleName()
0x30      asIScriptModule *GetModule()
0x38      const char *GetScriptSectionName()
0x40      const char *GetConfigGroup()
0x48      asDWORD GetAccessMask()
0x50      void *GetAuxiliary()
0x58      asITypeInfo     *GetObjectType()
0x60      const char *GetObjectName()
0x68      const char *GetName()
0x70      const char *GetNamespace()
0x78      const char *GetDeclaration(bool includeObjectName = true, bool includeNamespace = false, bool includeParamNames = false)
0x80      bool IsReadOnly()
0x88      bool IsPrivate()
0x90      bool IsProtected()
0x98      bool IsFinal()
0xa0      bool IsOverride()
0xa8      CUSTOM FUNCTION
0xb0      bool IsShared()
0xb8      bool IsExplicit()
0xc0      asUINT           GetParamCount()
0xc8      int GetParam(asUINT index, int *typeId, asDWORD *flags = 0, const char **name = 0, const char **defaultArg = 0)
0xd0      int GetReturnTypeId(asDWORD *flags = 0)
0xd8      int GetTypeId()
0xe0      bool IsCompatibleWithTypeId(int typeId)
0xe8      void *GetDelegateObject()
0xf0      asITypeInfo *GetDelegateObjectType()
0xf8      asIScriptFunction *GetDelegateFunction()
0x100     asUINT GetVarCount()
0x108     int GetVar(asUINT index, const char **name, int *typeId = 0)
0x110     const char *GetVarDecl(asUINT index, bool includeNamespace = false)
0x118     int FindNextLineWithCode(int line)
0x120     asDWORD *GetByteCode(asUINT *length = 0)
0x128     void *SetUserData(void *userData, asPWORD type = 0)
0x130     void *GetUserData(asPWORD type = 0)
0x138     ~asIScriptFunction() {};