0x0       asIScriptEngine *GetEngine()
0x8       const char *GetConfigGroup()
0x10      asDWORD GetAccessMask()
0x18      asIScriptModule *GetModule()
0x20      int AddRef()
0x28      int Release()
0x30      const char *GetName()
0x38      const char *GetNamespace()
0x40      asITypeInfo *GetBaseType()
0x48      bool DerivesFrom(const asITypeInfo *objType)
0x50      asDWORD GetFlags()
0x58      asUINT GetSize()
0x60      int GetTypeId()
0x68      int GetSubTypeId(asUINT subTypeIndex = 0)
0x70      asITypeInfo *GetSubType(asUINT subTypeIndex = 0)
0x78      asUINT GetSubTypeCount()
0x80      asUINT GetInterfaceCount()
0x88      asITypeInfo *GetInterface(asUINT index)
0x90      bool Implements(const asITypeInfo *objType)
0x98      asUINT GetFactoryCount()
0xa0      asIScriptFunction *GetFactoryByIndex(asUINT index)
0xa8      asIScriptFunction *GetFactoryByDecl(const char *decl)
0xb0      asUINT GetMethodCount()
0xb8      asIScriptFunction *GetMethodByIndex(asUINT index, bool get= true)
0xc0      asIScriptFunction *GetMethodByName(const char *name, bool get= true)
0xc8      asIScriptFunction *GetMethodByDecl(const char *decl, bool get= true)
0xd0      asUINT GetPropertyCount()
0xd8      int GetProperty(asUINT index, const char **name, int *typeId = 0, bool *isPrivate = 0, bool *isProtected = 0, int *offset = 0, bool *isReference = 0, asDWORD *accessMask = 0, int *compositeOffset = 0, bool *isCompositeIndirect = 0)
0xe0      const char *GetPropertyDeclaration(asUINT index, bool includeNamespace = false)
0xe8      asUINT GetBehaviourCount()
0xf0      asIScriptFunction *GetBehaviourByIndex(asUINT index, asEBehaviours *outBehaviour)
0xf8      asUINT GetChildFuncdefCount()
0x100     asITypeInfo *GetChildFuncdef(asUINT index)
0x108     asITypeInfo *GetParentType()
0x110     asUINT GetEnumValueCount()
0x118     const char *GetEnumValueByIndex(asUINT index, int *outValue)
0x120     int GetTypedefTypeId()
0x128     asIScriptFunction *GetFuncdefSignature()
0x130     void *SetUserData(void *data, asPWORD type = 0)
0x138     void *GetUserData(asPWORD type = 0)
0x140     ~asITypeInfo() {}